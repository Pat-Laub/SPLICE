}
result$range <- cut(result$sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
result$type <- revisions$txn_type[sort(sampled)]
result %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ sum(!is.na(.x))))
result %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ mean(.x, na.rm = TRUE)))
mean(rlnorm(100000, 0.15, 0.05))
mean(rlnorm(100000, 0.15, 0.1))
mean(rlnorm(100000, 0.15, 0.05))
mean(rlnorm(100000, 0.15, 0.1))
mean(rlnorm(100000, -0.1, 0.1))
mean(rlnorm(100000, -0.1, 0.05))
1/0.95
revisions_2 <- test_incurred_dataset %>%
filter(txn_type %in% c("Ma", "Mi", "PMa", "PMi"))
# compute the revision factors
# EXCLUDE revisions at notification
revisions_2 <- revisions_2 %>%
group_by(claim_no) %>%
mutate(incurred_ratio = incurred / lag(incurred, default = incurred[1])) %>%
filter(txn_time != 0) %>%
mutate(rev_label = paste0("rev", 1:n()))
# select a random sample of 10000 revisions, labelled by sampled == 1
sampled_2 <- sample(nrow(revisions_2), 10000, replace = FALSE)
revisions_2[sampled_2, "sampled"] <- 1
revisions_2[-sampled_2, "sampled"] <- 0
# turn into a horizontal dataset
horizontal_sampled_2 <- revisions_2 %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = sampled)
horizontal_IR_2 <- revisions_2 %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled_2), ncol = 6))
result_2 <- data.frame(matrix(ncol = 7, nrow = 10000))
next_rev <- paste0("next_rev", 1:6)
colnames(result_2) <- c("sample_rev", next_rev)
k <- 1
for (i in 1:nrow(horizontal_IR_2)) {
J <- sum(!is.na(horizontal_sampled_2[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled_2[i, j + 1] == 1) {
result_2[k, ] <- horizontal_IR_2[i, (j + 1) : (j + 7)]
k <- k + 1
}
}
}
result_2$range <- cut(result_2$sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
result_2$type <- revisions_2$txn_type[sort(sampled_2)]
# average
result_2 %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ mean(.x, na.rm = TRUE)))
# count of values used in the average
result_2 %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ sum(!is.na(.x))))
# why (2,3] group also shows fast decaying revision factors?
expss::cro(result_2$range, result_2$type)
hist(rlnorm(100000, meanlog = 0.15, sdlog = 0.1))
hist(rlnorm(100000, meanlog = 0, sdlog = 0.1))
hist(rlnorm(100000, meanlog = -0.1, sdlog = 0.1))
hist(rlnorm(100000, meanlog = -0.1, sdlog = 0.05))
curve(dlnorm(100000, meanlog = -0.1, sdlog = 0.05))
curve(dlnorm(meanlog = -0.1, sdlog = 0.05))
curve(dlnorm(x, meanlog = -0.1, sdlog = 0.05))
curve(dlnorm(x, meanlog = -0.1, sdlog = 0.1), add = T, col = "Red")
curve(dlnorm(x, meanlog = -0.1, sdlog = 0.05), from = 0.5, to = 1.5)
curve(dlnorm(x, meanlog = -0.1, sdlog = 0.1), add = T, col = "Red")
library(dplyr)
set.seed(1)
## with inflation
# keep only the revisions
revisions <- test_incurred_dataset_inflated %>%
filter(txn_type %in% c("Ma", "Mi", "PMa", "PMi"))
# compute the revision factors
# EXCLUDE revisions at notification
revisions <- revisions %>%
group_by(claim_no) %>%
mutate(incurred_ratio = incurred / lag(incurred, default = incurred[1])) %>%
filter(txn_time != 0) %>%
mutate(rev_label = paste0("rev", 1:n()))
# select a random sample of 10000 revisions, labelled by sampled == 1
sampled <- sample(nrow(revisions), 10000, replace = FALSE)
revisions[sampled, "sampled"] <- 1
revisions[-sampled, "sampled"] <- 0
# turn into a horizontal dataset
horizontal_sampled <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = sampled)
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled), ncol = 6))
result <- data.frame(matrix(ncol = 7, nrow = 10000))
next_rev <- paste0("next_rev", 1:6)
colnames(result) <- c("sample_rev", next_rev)
k <- 1
for (i in 1:nrow(horizontal_IR)) {
J <- sum(!is.na(horizontal_sampled[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled[i, j + 1] == 1) {
result[k, ] <- horizontal_IR[i, (j + 1) : (j + 7)]
k <- k + 1
}
}
}
result$range <- cut(result$sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
result$type <- revisions$txn_type[sort(sampled)]
# average
table62 <- result %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ mean(.x, na.rm = TRUE)))
table62
set.seed(20210131)
## with inflation
# keep only the revisions
revisions <- test_incurred_dataset_inflated %>%
filter(txn_type %in% c("Ma", "Mi", "PMa", "PMi"))
# compute the revision factors
# EXCLUDE revisions at notification
revisions <- revisions %>%
group_by(claim_no) %>%
mutate(incurred_ratio = incurred / lag(incurred, default = incurred[1])) %>%
filter(txn_time != 0) %>%
mutate(rev_label = paste0("rev", 1:n()))
# select a random sample of 10000 revisions, labelled by sampled == 1
sampled <- sample(nrow(revisions), 10000, replace = FALSE)
revisions[sampled, "sampled"] <- 1
revisions[-sampled, "sampled"] <- 0
# turn into a horizontal dataset
horizontal_sampled <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = sampled)
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled), ncol = 6))
result <- data.frame(matrix(ncol = 7, nrow = 10000))
next_rev <- paste0("next_rev", 1:6)
colnames(result) <- c("sample_rev", next_rev)
k <- 1
for (i in 1:nrow(horizontal_IR)) {
J <- sum(!is.na(horizontal_sampled[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled[i, j + 1] == 1) {
result[k, ] <- horizontal_IR[i, (j + 1) : (j + 7)]
k <- k + 1
}
}
}
result$range <- cut(result$sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
result$type <- revisions$txn_type[sort(sampled)]
# average
table62 <- result %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ mean(.x, na.rm = TRUE)))
table62
set.seed(20210215)
## with inflation
# keep only the revisions
revisions <- test_incurred_dataset_inflated %>%
filter(txn_type %in% c("Ma", "Mi", "PMa", "PMi"))
# compute the revision factors
# EXCLUDE revisions at notification
revisions <- revisions %>%
group_by(claim_no) %>%
mutate(incurred_ratio = incurred / lag(incurred, default = incurred[1])) %>%
filter(txn_time != 0) %>%
mutate(rev_label = paste0("rev", 1:n()))
# select a random sample of 10000 revisions, labelled by sampled == 1
sampled <- sample(nrow(revisions), 10000, replace = FALSE)
revisions[sampled, "sampled"] <- 1
revisions[-sampled, "sampled"] <- 0
# turn into a horizontal dataset
horizontal_sampled <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = sampled)
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled), ncol = 6))
result <- data.frame(matrix(ncol = 7, nrow = 10000))
next_rev <- paste0("next_rev", 1:6)
colnames(result) <- c("sample_rev", next_rev)
k <- 1
for (i in 1:nrow(horizontal_IR)) {
J <- sum(!is.na(horizontal_sampled[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled[i, j + 1] == 1) {
result[k, ] <- horizontal_IR[i, (j + 1) : (j + 7)]
k <- k + 1
}
}
}
result$range <- cut(result$sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
result$type <- revisions$txn_type[sort(sampled)]
# average
table62 <- result %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ mean(.x, na.rm = TRUE)))
table62
horizontal_type <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = txn_type)
View(horizontal_type)
result <- data.frame(matrix(ncol = 13, nrow = 10000))
next_rev <- paste0("next_rev", 1:6)
colnames(result) <- c("sample_rev", next_rev)
k <- 1
for (i in 1:nrow(horizontal_IR)) {
J <- sum(!is.na(horizontal_sampled[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled[i, j + 1] == 1) {
result[k, ] <- c(horizontal_IR[i, (j + 1) : (j + 7)],
horizontal_type[i, (j + 1) : (j + 7)])
k <- k + 1
}
}
}
horizontal_type <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = txn_type) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled), ncol = 6))
result <- data.frame(matrix(ncol = 13, nrow = 10000))
colnames(result) <- c("sample_rev", next_rev, paste0("next_rev_type", 1:6))
k <- 1
for (i in 1:nrow(horizontal_IR)) {
J <- sum(!is.na(horizontal_sampled[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled[i, j + 1] == 1) {
result[k, ] <- c(horizontal_IR[i, (j + 1) : (j + 7)],
horizontal_type[i, (j + 1) : (j + 7)])
k <- k + 1
}
}
}
warnings()
k <- 1
for (i in 1:nrow(horizontal_IR)) {
J <- sum(!is.na(horizontal_sampled[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled[i, j + 1] == 1) {
result[k, ] <- c(horizontal_IR[i, (j + 1) : (j + 7)],
horizontal_type[i, (j + 2) : (j + 7)])
k <- k + 1
}
}
}
result %>% select(starts_with("next_rev_type")) %>%
View(revisions)
View(result)
result %>% filter(sample_rev > 3 & sample_rev < 4) %>%
with(table(next_rev_type1))
result %>%
mutate(range = cut(sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))) %>%
cro(range, next_rev_type1)
result %>%
mutate(range = cut(sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))) %>%
expss::cro(range, next_rev_type1)
result %>%
mutate(range = cut(sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))) %>%
group_by(range, next_rev_type1)
result %>%
mutate(range = cut(sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))) %>%
group_by(range, next_rev_type1) %>%
summarise(n = n())
# why revision sizes increase from "2 to 3" to "4 to 5"
tab <- result %>%
mutate(range = cut(sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))) %>%
group_by(range, next_rev_type1) %>%
summarise(n = n())
View(tab)
tab <- result %>%
mutate(range = cut(sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))) %>%
filter(!is.na(next_rev_type1)) %>%
group_by(range, next_rev_type1) %>%
summarise(n = n())
View(tab)
library(dplyr)
set.seed(20210210)
## with inflation
# keep only the revisions
revisions <- test_incurred_dataset_inflated %>%
filter(txn_type %in% c("Ma", "Mi", "PMa", "PMi"))
# compute the revision factors
# EXCLUDE revisions at notification
revisions <- revisions %>%
group_by(claim_no) %>%
mutate(incurred_ratio = incurred / lag(incurred, default = incurred[1])) %>%
filter(txn_time != 0) %>%
mutate(rev_label = paste0("rev", 1:n()))
# select a random sample of 10000 revisions, labelled by sampled == 1
sampled <- sample(nrow(revisions), 10000, replace = FALSE)
revisions[sampled, "sampled"] <- 1
revisions[-sampled, "sampled"] <- 0
# turn into a horizontal dataset
horizontal_sampled <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = sampled)
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled), ncol = 6))
horizontal_type <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = txn_type) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled), ncol = 6))
result <- data.frame(matrix(ncol = 13, nrow = 10000))
next_rev <- paste0("next_rev", 1:6)
colnames(result) <- c("sample_rev", next_rev, paste0("next_rev_type", 1:6))
k <- 1
for (i in 1:nrow(horizontal_IR)) {
J <- sum(!is.na(horizontal_sampled[i, ]))
for (j in 1:(J-1)) {
if (horizontal_sampled[i, j + 1] == 1) {
result[k, ] <- c(horizontal_IR[i, (j + 1) : (j + 7)],
horizontal_type[i, (j + 2) : (j + 7)])
k <- k + 1
}
}
}
result$range <- cut(result$sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
result$type <- revisions$txn_type[sort(sampled)]
# average
table62 <- result %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ mean(.x, na.rm = TRUE)))
# count of values used in the average
table62s <- result %>%
group_by(range) %>%
summarise(across(all_of(next_rev), ~ sum(!is.na(.x))))
# why (2,3] group also shows fast decaying revision factors?
table62test <- expss::cro(result$range, result$type)
# why revision sizes increase from "2 to 3" to "4 to 5"
tab <- result %>%
mutate(range = cut(sample_rev, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))) %>%
filter(!is.na(next_rev_type1)) %>%
group_by(range, next_rev_type1) %>%
summarise(n = n())
View(tab)
table62s
write.csv(tab, "~/Downloads/tab.csv")
install.packages("lifecontingencies")
devtools::install_github("amvillegas/actstatr")
learnr::run_tutorial("lifetables", package = "actstatr")
library(lifecontingencies)
LT1 <- new("lifetable", x = 0:120, lx = 120:0, name = "Sample life table 1")
plot(LT1, type="l")
setwd("~/Dropbox/2021/01 ACTL3141/")
rstudioapi::terminalExecute("open -n /Applications/RStudio.app", show=F)
library(devtools)
load_all()
## Table 6-2 version 2
# restrict to major revisions
# with inflation
# keep only the revisions
revisions <- test_incurred_dataset_inflated %>%
filter(txn_type %in% c("Ma", "PMa"))
## Table 6-2 version 2
# restrict to major revisions
# with inflation
# keep only the revisions
revisions <- test_incurred_dataset_inflated %>%
filter(txn_type %in% c("Ma", "PMa"))
library(dplyr)
## Table 6-2 version 2
# restrict to major revisions
# with inflation
# keep only the revisions
revisions <- test_incurred_dataset_inflated %>%
filter(txn_type %in% c("Ma", "PMa"))
View(revisions)
# compute the revision factors
# EXCLUDE revisions at notification
revisions <- revisions %>%
group_by(claim_no) %>%
mutate(incurred_ratio = incurred / lag(incurred, default = incurred[1])) %>%
filter(txn_time != 0) %>%
mutate(rev_label = paste0("rev", 1:n()))
View(revisions)
View(test_incurred_dataset_inflated)
352421.2305/63904.8204
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
as.data.frame() %>%
cbind(matrix(nrow = nrow(horizontal_sampled), ncol = 6))
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
as.data.frame()
View(horizontal_IR)
horizontal_maFactor <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = multiplier) %>%
as.data.frame()
View(horizontal_maFactor)
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
mutate(range = cut(rev_1), breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
horizontal_maFactor <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = multiplier) %>%
mutate(range = cut(rev_1), breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
View(horizontal_IR)
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
mutate(range = cut(rev1), breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
horizontal_maFactor <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = multiplier) %>%
mutate(range = cut(rev1), breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf))
horizontal_IR <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = incurred_ratio) %>%
mutate(range = cut(rev1, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf)))
View(horizontal_IR)
horizontal_maFactor <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = multiplier) %>%
mutate(range = cut(rev1, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf)))
?n
horizontal_IR %>%
group_by(range) %>%
summarise(mean_next = mean(rev2, na.rm = TRUE),
count = sum(!is.na(rev2)))
horizontal_multiplier %>%
group_by(range) %>%
summarise(mean_next = mean(rev2, na.rm = TRUE),
count = sum(!is.na(rev2)))
horizontal_maFactor <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = multiplier) %>%
mutate(range = cut(rev1, breaks = c(0, 0.5, 1, 2, 3, 4, 5, Inf)))
horizontal_multiplier %>%
group_by(range) %>%
summarise(mean_next = mean(rev2, na.rm = TRUE),
count = sum(!is.na(rev2)))
horizontal_maFactor %>%
group_by(range) %>%
summarise(mean_next = mean(rev2, na.rm = TRUE),
count = sum(!is.na(rev2)))
horizontal_maFactor <- revisions %>%
tidyr::pivot_wider(id_cols = claim_no,
names_from = rev_label,
values_from = multiplier) %>%
mutate(range = cut(rev1, breaks = c(3, 3.5, 4, 4.5, 5, Inf)))
horizontal_maFactor %>%
group_by(range) %>%
summarise(mean_next = mean(rev2, na.rm = TRUE),
count = sum(!is.na(rev2)))
x <- horizontal_IR %>%
group_by(range) %>%
summarise(mean_next = mean(rev2, na.rm = TRUE),
count = sum(!is.na(rev2)))
y <- horizontal_maFactor %>%
group_by(range) %>%
summarise(mean_next = mean(rev2, na.rm = TRUE),
count = sum(!is.na(rev2)))
write.csv(x, "../Table6-2-v2.xlsx")
write.csv(x, "../Table6-2-v2.csv", row.names = FALSE)
write.csv(x, "../Table6-2-v2-1.csv", row.names = FALSE)
write.csv(y, "../Table6-2-v2-2.csv", row.names = FALSE)
View(subset(revisions, multiplier > incurred_ratio))
library(devtools)
load_all()
?claim_history
document()
?claim_history
1 - pnorm(1, 0.7, 0.02)
pnorm(1, 0.7, sqrt(0.02))
Reduce(function(y, w) w(y), c(function(x) x + 1, function(x) x * x, function(x) g(x) / 2), A)
A <- 2
g(x) <- function(x) {x^2}
g <- function(x) {x^2}
Reduce(function(y, w) w(y), c(function(x) x + 1, function(x) x * x, function(x) g(x) / 2), A)
