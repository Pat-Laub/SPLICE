% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_data.R
\name{generate_data}
\alias{generate_data}
\title{Generate Data of Varying Complexity}
\usage{
generate_data(
  n_claims_per_period,
  n_periods = 40,
  complexity = c(1:5),
  data_type = c("claims", "payments", "incurred"),
  random_seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{n_claims_per_period}{\strong{expected} number of claims per period (equals
the total expected number of claims divided by \code{n_periods}).}

\item{n_periods}{number of accident periods considered (equals number of
claims development periods considered); default 40.}

\item{complexity}{integer from 1 (simplest) to 5 (most complex).}

\item{data_type}{a character vector specifying output data types. By default
the function will output all 3 datasets (claims, payments, incurred), but the
user may choose to output only a subset.}

\item{random_seed}{optional seed for random number generation for
reproducibility.}

\item{verbose}{logical; if \code{TRUE} print a message about the data generated.}
}
\value{
A named list of dataframes:
\tabular{ll}{
\code{claim_dataset} \tab A dataset of claim records that takes the same structure
as \code{\link[SynthETIC]{test_claim_dataset}}, with each row representing a
unique claim. \cr
\code{payment_dataset} \tab A dataset of partial payment records that takes the
same structure as \code{\link[SynthETIC]{test_transaction_dataset}}, with
each row representing a unique payment. \cr
\code{incurred_dataset} \tab A dataset of transaction records that tracks how the
case estimates change over time. Takes the same structure as
\code{\link{test_incurred_dataset}}, with each row representing a transaction
(any of claim notification, settlement, a payment, or a case estimate
revision).
}
}
\description{
Generates datasets under 5 scenarios of different levels of complexity (here
"complexity" means the level of difficulty of analysis).
}
\details{
Assume 40 periods. Inflated
}
\examples{
# Generate datasets of full complexity
result <- generate_data(n_claims_per_period = 100, complexity = 5, random_seed = 42)

# Save individual datasets
claims <- result$claim_dataset
payments <- result$payment_dataset
incurred <- result$incurred_dataset

# Generate chain-ladder compatible dataset
CL_simple <- generate_data(
  n_claims_per_period = 100, data_type = 'claims', complexity = 1, random_seed = 42)

# To mute message output
CL_simple_2 <- generate_data(
  n_claims_per_period = 100, verbose = FALSE, random_seed = 42)

# Ouput is reproducible with the same random_seed value
all.equal(CL_simple$claim_dataset, CL_simple_2$claim_dataset)

}
\seealso{
\code{\link[SynthETIC]{generate_claim_dataset}},
\code{\link[SynthETIC]{generate_transaction_dataset}},
\code{\link{generate_incurred_dataset}}
}
