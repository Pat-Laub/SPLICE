% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/features_10_minor_revisions.R
\name{claim_miRev}
\alias{claim_miRev}
\alias{claim_miRev_no}
\alias{claim_miRev_time}
\alias{claim_miRev_size}
\title{Minor Revisions of Outstanding Claim Payments}
\usage{
claim_miRev_no(
  claims,
  miRev_no_atP_function,
  miRev_no_NatP_function,
  frequency_vector = claims$frequency_vector,
  settlement_list = claims$settlement_list,
  no_payments_list = claims$no_payments_list
)

claim_miRev_time(
  claims,
  miRev_list,
  miRev_time_NatP_function,
  settlement_list = claims$settlement_list,
  payment_delay_list = claims$payment_delay_list
)

claim_miRev_size(
  claims,
  maRev_list,
  miRev_list,
  miRev_size_function,
  settlement_list = claims$settlement_list
)
}
\arguments{
\item{claims}{an \code{claims} object containing all the simulated quantities
(other than those related to incurred loss), see \code{claims}.}

\item{miRev_no_atP_function}{function of \code{no_pmt} (number of partial
payments) that generates and returns the number of minor revisions that are
simultaneous with a partial payment (see Details for the default function).}

\item{miRev_no_NatP_function}{function of \code{setldel} (settlement delay) that
generates and returns the number of minor revisions that are not
simultaneous with a partial payment (see Details for the default function).}

\item{frequency_vector}{a vector of claim frequencies for all the periods
(not required if the \code{claims} argument is provided).}

\item{settlement_list}{list of settlement delays (not required if the
\code{claims} argument is provided).}

\item{no_payments_list}{list of number of partial payments (not required if
the \code{claims} argument is provided).}

\item{miRev_list}{nested list of minor revision histories (with non-empty
revision frequencies).}

\item{miRev_time_NatP_function}{function of \code{miRev_no_NatP}, \code{setldel} that
generates and returns the epochs of minor revisions that do not occur with a
partial payment, measured from claim notification (see Details for the
default function).}

\item{payment_delay_list}{(compound) list of inter partial delays (not
required if the \code{claims} argument is provided).}

\item{maRev_list}{nested list of major revision histories (with non-empty
revision frequencies).}

\item{miRev_size_function}{function of \code{miRev_time} (vector, epochs of all
minor revisions), \code{maRev_time_2nd} (time of the second major revision),
\code{setldel} that generates and returns the sizes of the minor revision
multipliers (see Details for the default function).}
}
\value{
A nested list structure such that the \emph{j}th component of the \emph{i}th
sub-list is a list of information on minor revisions of the \emph{j}th claim of
occurrence period \emph{i}. The "unit list" (i.e. the smallest, innermost
sub-list) contains the following components:
\tabular{ll}{
\code{miRev_atP} \tab A vector of indicators showing whether there is a minor
revision at each partial payment [\code{claim_miRev_no()}]. \cr
\code{miRev_no_atP} \tab Number of minor revisions that occur simultaneously with
a partial payment, numerically equals to the sum of \code{miRev_atP}
[\code{claim_miRev_no()}]. \cr
\code{miRev_no_NatP} \tab Number of minor revisions that do not occur with a
partial payment [\code{claim_miRev_no()}]. \cr
\code{miRev_time_atP} \tab Time of minor revisions that occur simultaneously with
a partial payment (time measured from claim notification)
[\code{claim_miRev_time()}]. \cr
\code{miRev_time_NatP} \tab Time of minor revisions that do \emph{not} occur
simultaneously with a partial payment (time measured from claim notification)
[\code{claim_miRev_time()}]. \cr
\code{miRev_multiplier_atP} \tab Minor revision multipliers of \strong{outstanding claim
payments} for revisions at partial payments [\code{claim_miRev_size()}]. \cr
\code{miRev_multiplier_NatP} \tab Minor revision multipliers of \strong{outstanding claim
payments} for revisions at any other times [\code{claim_miRev_size()}]. \cr
}
}
\description{
A suite of functions that works together to simulate, in order,
the (1) frequency, (2) time, and (3) size of minor revisions of outstanding
claim payments, for each of the claims occurring in each of the periods.

We separate the case of minor revisions that occur simultaneously with a
partial payment (\code{miRev_atP}), and the ones that do not coincide with a
payment (\code{miRev_NatP}).
}
\section{Details - \code{claim_miRev_no} (Frequency)}{
 Minor revisions may occur
simultaneously with a partial payment, or at any other time.

For the former case, we sample the occurrence of minor revisions as Bernoulli
random variables with probability parameter \eqn{p = 1/2}.

For the latter case, we sample the number of (non payment simultaneous) minor
revisions from a geometric distribution with mean =
\eqn{min(3, setldel / 4)}.

One can modify the above sampling distributions by plugging in their own
\code{miRev_no_atP_function} and \code{miRev_no_NatP_function}, where the former
simulates the number of minor revisions at partial payments (and returns a
vector of revision indicators), and the latter simulates and returns the
number of minor revisions at any other points in time, with possible
dependence on the settlement delay of the claim.
}

\section{Details - \code{claim_miRev_time} (Time)}{
 For minor revisions that occur
simultaneously with a partial payment, the revision times simply coincide
with the epochs of the relevant partial payments.

For minor revisions that occur at a different time, by default the revision
times are sampled from a uniform distribution with parameters \code{min} \eqn{=
settlement_delay / 6} and \code{max} \eqn{= settlement_delay}.

One can modify the above sampling distribution by plugging in their own
\code{miRev_time_NatP_function}, which simulates and returns the times of minor
revisions that do not coincide with a payment, with possible dependence on
the settlement delay of the claim (see Examples).
}

\section{Details - \code{claim_miRev_size} (Revision Multiplier)}{
 The sampling
distribution for minor revision multipliers is the same for both revisions
that occur with and without a partial payment. We allow sampling dependence
on the delay from notification to settlement (\code{setldel}), the delay from
notification to the subject minor revisions (\code{miRev_time}), and the history
of major revisions (in particular, the time of the second major revision).

Let \eqn{\tau} denote the delay from notification to the epoch of the minor
revision, and \eqn{w} the settlement delay. Then
\itemize{
\item For \eqn{\tau \le w / 3}, the revision multiplier is sampled from a
lognormal distribution with parameters \code{meanlog} \eqn{= 0.15} and \code{sdlog}
\eqn{= 0.05} if preceded by a 2nd major revision, \code{sdlog} \eqn{= 0.1}
otherwise;
\item For \eqn{w / 3 < \tau \le 2w / 3}, the revision multiplier is sampled
from a lognormal distribution with parameters \code{meanlog} \eqn{= 0} and \code{sdlog}
\eqn{= 0.05} if preceded by a 2nd major revision, \code{sdlog} \eqn{= 0.1}
otherwise;
\item For \eqn{\tau > 2w / 3}, the revision multiplier is sampled from a
lognormal distribution with parameters \code{meanlog} \eqn{= -0.1} and \code{sdlog}
\eqn{= 0.05} if preceded by a 2nd major revision, \code{sdlog} \eqn{= 0.1}
otherwise.
}

Note that minor revisions tend to be upward in the early part of a claimâ€™s
life, and downward in the latter part.

The revision multipliers are subject to further constraints to ensure that
the revised incurred estimate never falls below what has already been paid.
This is dicussed in \code{\link{claim_history}}.

Unlike the major revision multipliers which apply to the incurred loss
estimates, the minor revision multipliers apply to the case estimate of
outstanding claim payments i.e. a revision multiplier of 2.54 means that at
the time of the minor revision the outstanding claims payment increases by
a factor of 2.54.
}

\examples{
set.seed(1)
minor <- claim_miRev_no(test_claims_object)
minor[[1]][[1]] # the "unit list" for the first claim

# update the timing information
minor <- claim_miRev_time(test_claims_object, minor)
# observe how this has changed
minor[[1]][[1]]
# with an alternative sampling distribution e.g. triangular
my_miRev_time_function <- function(miRev_no_NatP, setldel) {
  sort(rtri(n = miRev_no_NatP, min = setldel/6, max = setldel, mode = setldel))
}
minor_2 <- claim_miRev_time(test_claims_object, minor, my_miRev_time_function)

# update the revision multipliers (need to generate "major" first)
# minor <- claim_miRev_size(test_claims_object, major, minor)
}
\seealso{
\code{\link{claims}}
}
